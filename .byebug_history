c
exit
@board[*diag_right].color
@board.in_range?(diag_right)
diag_right
n
@board.in_range?(diag_left)
diag_left
n
exit
[new_r, cur_c - 1]
new_r
exit
results
n
results
exit
c
n
exit
!@board.empty?([move_two])
@moved
move_two
exit
move_two
moves_row
n
results
n
@board.empty?([new_r, cur_c])
new_r
n
dir
pos
n
pos
exit
self.pos
new_pos
@color
self.color
exit
@board.all_pos
moves
exit
n
self.pos
cur_c
cur_r
n
cur_r
self.class
self
c
exit
piece_between?([4,0])
get_moves(straight_moves)
straight_moves
self.class
self
moves
end_pos
exit
piece_between?(moves.first)
moves.first
moves
exit
get_moves(straight_moves)
straight_moves
exit
moves
end_pos
exit
n
self[start].valid_move?(end_pos)
self[start]
end_pos
start
exit
n
move
@board.move(start, end_pos)
n
@current_player.color
@board[start].color
n
start
n
exit
c
handle_key(key)
key
n
key
c
n
start
end_pos
n
start
n
start
n
start
strat
